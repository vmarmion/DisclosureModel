setwd("~/Dropbox/PhD_identity/CH7_Disclosure_Model/Ex5_Privacy_EcoSystem/Ex5_Identity_Exposure/RFiles")
rm(list = ls(all = TRUE))
setwd("~/Dropbox/PhD_identity/CH7_Disclosure_Model/Ex7_Identity_Exposure/RFiles")
rm(list = ls(all = TRUE))
setwd("~/Dropbox/PhD_identity/CH7_Disclosure_Model/Ex7_Identity_Exposure/RFiles")
rm(list = ls(all = TRUE))
setwd("~/Dropbox/PhD_identity/CH7_Disclosure_Model/Ex7_Identity_Exposure/RFiles")
datafilenameORG = "ORG_ _P100_Y10_S10_outputfile.csv"
datafilenameACC = "ACC_ _P100_Y10_S10_outputfile.csv"
datafilenameUSER = "USER_ _P100_Y10_S10_outputfile.csv"
data.factors = read.csv(datafilenameORG,header=TRUE, row.names = 1)
rm(list = ls(all = TRUE))
setwd("~/Dropbox/PhD_identity/CH7_Disclosure_Model/Ex7_Identity_Exposure/OutputFiles")
datafilenameORG = "ORG_ _P100_Y10_S10_outputfile.csv"
datafilenameACC = "ACC_ _P100_Y10_S10_outputfile.csv"
datafilenameUSER = "USER_ _P100_Y10_S10_outputfile.csv"
data.factors = read.csv(datafilenameORG,header=TRUE, row.names = 1)
summary(data.factors)
rm(list = ls(all = TRUE))
setwd("~/Dropbox/PhD_identity/CH7_Disclosure_Model/Ex7_Identity_Exposure/OutputFiles")
datafilenameORG = "ORG_ _P100_Y10_S10_outputfile.csv"
datafilenameACC = "ACC_ _P100_Y10_S10_outputfile.csv"
datafilenameUSER = "USER_ _P100_Y10_S10_outputfile.csv"
data.factors = read.csv(datafilenameORG,header=TRUE, row.names = 1)
data.factorsA = read.csv(datafilenameACC,header=TRUE, row.names = 1)
summary(data.factors)
attach(data.factors)
summary(data.factorsA)
attach(data.factorsA)
rm(list = ls(all = TRUE))
setwd("~/Dropbox/PhD_identity/CH7_Disclosure_Model/Ex7_Identity_Exposure/OutputFiles")
datafilenameORG = "ORG_ _P100_Y10_S10_outputfile.csv"
datafilenameACC = "ACC_ _P100_Y10_S10_outputfile.csv"
datafilenameUSER = "USER_ _P100_Y10_S10_outputfile.csv"
data.factorsORG = read.csv(datafilenameORG,header=TRUE, row.names = 1)
data.factorsACC = read.csv(datafilenameACC,header=TRUE, row.names = 1)
data.factorsUSER = read.csv(datafilenameUSER,header=TRUE, row.names = 1)
summary(data.factorsORG)
summary(data.factorsACC)
summary(data.factorsUSER)
####################################################
#      Cluster Analysis Exp 1
# 33 data items, 3 senarios and 120 participants
#      Author: Vincent Marmion
#      Date: 26th Dec 2014
####################################################
rm(list = ls(all = TRUE))
require(Kendall)
library(vegan)
require(Hmisc)
library(corrgram)
library(cluster)
library(fpc)
library(NbClust)
library(ape)
library(Cairo)
setwd("~/Dropbox/PhD_identity/Ex2_PrivacySort/Sorting task")
datafilename="outputfile1.csv"
data.pii=read.csv(datafilename,header=TRUE, row.names = 1)
source("funcs.R")
summary(data.pii)
attach(data.pii)
data.pii
rnames <- function(data){
rownames(data) <- rownames(data.pii)
}
rownames(data.pii)
judgeSet_BASE = cbind(BASE_MCRankSocial, BASE_MCRankBank, BASE_MCRankPassport)
judgeSet_H_IMP = cbind(HI_MCRankSocial, HI_MCRankBank, HI_MCRankPassport)
judgeSet_L_IMP = cbind(LI_MCRankSocial, LI_MCRankBank, LI_MCRankPassport)
judgeSet_PRO_RF = cbind(PRO_MCRankSocial, PRO_MCRankBank, PRO_MCRankPassport)
judgeSet_PRE_RF = cbind(PRE_MCRankSocial, PRE_MCRankBank, PRE_MCRankPassport)
judgeSet_H_LOCO = cbind(HL_MCRankSocial, HL_MCRankBank, HL_MCRankPassport)
judgeSet_L_LOCO = cbind(LL_MCRankSocial, LL_MCRankBank, LL_MCRankPassport)
judgeSet_H_ASS = cbind(HA_MCRankSocial, HA_MCRankBank, HA_MCRankPassport)
judgeSet_L_ASS = cbind(LA_MCRankSocial, LA_MCRankBank, LA_MCRankPassport)
sublabels = c("BASE", "HIGH IMPULSE","LOW IMPULSE","PROMOTION","PREVENTION","HIGH LOCOMOTION","LOW LOCOMOTION","HIGH ASSESSMENT","LOW ASSESSMENT" )
judgeSets <- list(judgeSet_BASE, judgeSet_H_IMP,judgeSet_L_IMP, judgeSet_PRE_RF, judgeSet_PRO_RF, judgeSet_H_LOCO, judgeSet_L_LOCO, judgeSet_H_ASS, judgeSet_L_ASS)
for (j in 1:9){
rnames(judgeSets[[j]])
mycorrs(judgeSets[[j]], sublabels[j])
myKendall(judgeSets[[j]], sublabels[j])
}
BASE_ScoreSocial
dataMain = data.frame(BASE_ScoreSocial, BASE_ScoreBank, BASE_ScorePassport)
row.names(dataMain) <- row.names(data.pii)
dataMain
row.names(dataMain)
labelsMain = c("Social","Bank", "Passport" )
labelsMain
for (x in 1:3){
t <- paste(labelsMain[x], ": Cluster Analysis")
wss <- (nrow(dataMain[x])-1)*sum(apply(dataMain[x],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(dataMain[x], centers=i)$withinss)
plot(1:15, wss, type="b", main = t, xlab="Number of Clusters", ylab="Within groups sum of squares")
}
mydata <- list()#clear list
for (x in 1:3){
fit <- kmeans(dataMain[x], 4) # 5 cluster solution
# get cluster means
aggregate(dataMain[x],by=list(fit$cluster),FUN=mean)
# append cluster assignment
mydata[x] <- data.frame(dataMain[x], fit$cluster)
}
mydata
# vector of colors
mypal = c("#006600", "#FF3300", "#9900CC", "#666699", "#003399")
for (x in 1:3){
# Ward Hierarchical Clustering
d <- dist(dataMain[x], method = "euclidean") # distance matrix
t <- paste(labelsMain[x], ": Dendrogram")
fn <- paste(labelsMain[x], ".pdf", sep="")
fit <- hclust(d, method="ward")
groups <- cutree(fit, k=4) # cut tree into 5 clusters
pdf(file=fn, title = t, width=20, height=10, pointsize=12)
plot(as.phylo(fit), tip.color = mypal[groups], label.offset=0.9,no.margin=TRUE,
col = "red") # display dendogram
dev.off()
}
labels
for (x in 1:3){
# Cluster Plot against 1st 2 principal components
fit <- kmeans(dataMain[x],centers= 5, iter.max=1000, nstart=10000)
fit<- kmeans(dataMain[x], 5)
clusplot(dataMain[x], fit$cluster, color=TRUE, shade=F, labels=2, lines=0, cex = 0.7, main = "Clustering", xlab = "Unknown Factor", ylab = "Unknown Factor")
}
####################################################
#      Cluster Analysis Exp 1
# 33 data items, 3 senarios and 120 participants
#      Author: Vincent Marmion
#      Date: 26th Dec 2014
####################################################
rm(list = ls(all = TRUE))
require(Kendall)
library(vegan)
require(Hmisc)
library(corrgram)
library(cluster)
library(fpc)
library(NbClust)
library(ape)
library(Cairo)
setwd("~/Dropbox/PhD_identity/Ex2_PrivacySort/Sorting task")
datafilename="outputfile1.csv"
data.pii=read.csv(datafilename,header=TRUE, row.names = 1)
source("funcs.R")
summary(data.pii)
attach(data.pii)
data.pii
setwd("~/Dropbox/PhD_identity/Ex2_PrivacySort/Sorting task")
